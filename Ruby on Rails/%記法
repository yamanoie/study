%記法

コードをシンプルに記述することができる記法。
記述するコードが減るので、可読性が上がったりタイプミスによるエラーが出る確率を減らすことができる。




# %w

文字列の配列を作る


例）

%w記法を使わない場合

puts ["侍", "ブログ", "Ruby", "\"%w記法\""]

実行結果：

侍
ブログ
Ruby
"%w記法"


%w記法を使う場合

puts %w(侍 ブログ Ruby "%w記法")

実行結果：

侍
ブログ
Ruby
"%w記法"



#W（大文字）

%W記法は、%wと同様に空白区切りの文字列から配列を作成できる。
違いは、
%W → 式展開あり
%w → 式展開なし

例）

%W（大文字）の場合：

blog = "ブログ"
puts %W(侍 #{blog})

実行結果：

侍
ブログ



%wの場合：

blog = "ブログ"
puts %w(侍 #{blog})
実行結果：

侍
#{blog}






# %i

シンボルの配列を作る

＊　%I → 式展開あり


例）

p [:samurai, :blog, :Ruby]


p %i(samurai, blog, Ruby)



実行結果：

[:samurai, :blog, :Ruby]




# %Q (%)

" " (ダブルクォーテーション)の代替
文字列中の「"」のエスケープを省略して文字列を作成できるので、可読性を高めるために有効



%記法使わない：

puts "\"侍\" \“ブログ\”"



%記法を使う：

puts %("侍" “ブログ”)



実行結果：

“侍” “ブログ”



* %q

文字列中の「’」のエスケープを省略して文字列を作成


%q記法を使わない：

puts '\'侍\' ブログ'


%q記法を使う：

puts %q('侍' ブログ)


実行結果：

'侍' ブログ
