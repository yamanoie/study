CI/CD

Continuous Integration／Continuous Delivery
継続的インティグレーション／継続的デリバリー

CI/CDは1つの技術を指すものでなく、ソフトウェアの変更を常にテストして自動で本番環境にリリース可能な状態にしておく、ソフトウェア開発の手法。
CI/CDを取り入れると、バグを素早く発見したり、変更を自動でリリースしたりできるようになる。


「CI」は継続的インテグレーションを指すのが常で、開発者向けの自動化プロセスを意味する。
CI が正常に機能すると、アプリケーションへの新しいコード変更が定期的にビルド、テストされ、共通リポジトリに統合される。CI により、アプリケーション開発において同時に生じるブランチが多すぎて互いに競合するという問題を解決できる。

CD」は継続的デリバリーまたは継続的デプロイメント。
開発者によるアプリケーションへの変更に対して、バグがないか自動的にテストし、リポジトリ (GitHub やコンテナレジストリなど) にアップロードする。ここで、変更が運用チームによって本番環境に導入される。開発チームとビジネスチームとの間における可視性とコミュニケーションの不足という問題に対する解決策。したがって、継続的デリバリーの目的は、新規コードの導入作業の負担を最小限にすること。
継続的デプロイメント (もう 1 つの「CD」) は、開発者による変更をリポジトリから本番環境に自動的にリリースし、顧客が使用できるようにするというもの。運用チームが担当する手動プロセスが多すぎて、アプリケーション提供が遅れるという問題に対処。継続的デリバリーのメリットを活用し、パイプラインの次のステージを自動化。


CI/CDを使うと、コードの変更が発生するたびに自動でテストが行われるので、テストの実行忘れや、環境依存のテストを失くすことでの品質を向上させることができる。
まとめると、CI/CDを使うとテスト自動化することで品質を高めるだけではなく、その後のリリース作業も自動化することで、よりアジャイルな開発ができるようになります。


テストの自動化と言っても、CI/CDサービスやツールが自動でテストを作成してくれるわけではない。あくまで、実行するテストは自分たちで書く必要があり、CI/CDは主にそれらを任意のタイミングで自動で実行してくれるだけ。