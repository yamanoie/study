アップロード

ローカルで開発したイメージをステージングや本番環境で動かすにはDockerレジストリにアップロードする必要がある。
DockerレジストリはDocker Image を保存するための場所で、Docker版のGitHubのようなもの。

クラウドの場合

AWSの場合"Elastic Container Registry"というDockerレジストリサービスが存在する。
クラウド上に本番環境を構築する場合は構築するクラウドで提供されているDockerレジストリサービスを使うのが良い。


１、ログイン

$ docker login

Docker Hubへログイン
name passwordを打つ






２、 Docker Image の命名

Docker Hub にアップロードするためにはDocker Hub のDocker Image の命名規則に則る必要がある。
ユーザーのオリジナルイメージは <USER NAME>/<IMAGE NAME>:<TAG> という命名にする。( :<TAG> は省略可能で、省略すると :latest と命名される)
<USER NAME> は自分のユーザー名を入力。


$ docker tag hello <USER NAME>/hello




３、アップロード

$ docker push <USER NAME>/hello


The push refers to repository [docker.io/<USER NAME>/hello]
b57c79f4a9f3: Mounted from library/ubuntu
d60e01b37e74: Mounted from library/ubuntu
e45cfbc98a50: Mounted from library/ubuntu
762d8e1a6054: Mounted from library/ubuntu
latest: digest: sha256:99aab145aaa0bf0e51a2ab995e0051b1756e1016cbc7d82bcee663c79f56b5c3 size: 1150




４,実行中のコンテナの削除


$ docker container ls -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES
429c028bcf74        ubuntu              "echo hoge"         16 seconds ago      Exited (0) 15 seconds ago                       stoic_greider


$ docker container prune
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted



ローカルのイメージの削除


$ docker image prune -a
WARNING! This will remove all images without at least one container associated to them.
Are you sure you want to continue? [y/N] y
Deleted Images:


５、Docker Hub から作成したイメージの取得


$ docker pull <USER NAME>/hello
Using default tag: latest
latest: Pulling from <USER NAME>/hello
898c46f3b1a1: Pull complete
63366dfa0a50: Pull complete
041d4cd74a92: Pull complete
6e1bee0f8701: Pull complete
Digest: sha256:99aab145aaa0bf0e51a2ab995e0051b1756e1016cbc7d82bcee663c79f56b5c3
Status: Downloaded newer image for <USER NAME>/hello:latest



